version: '3.7'

services:

  back:
    build:
      context: ./back
      dockerfile: Dockerfile
    env_file:
      - back/.back_env
    working_dir: /code/back
    depends_on:
      - db
    volumes:
      - ./back:/code/back
    ports:
      - "8000:8000"   
    restart: on-failure
    networks:
      - gis_network

  ngnx:
    build: ./nginx
    volumes:
      - static:/static
    ports:
      - "80:80"
    depends_on:
      - back
    networks:
      - gis_network
    restart: on-failure

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    working_dir: /code/front
    env_file:
      - front/.front_env
    restart: on-failure
    environment:
      DEBUG: 1
    volumes:
      - ./front:/code
    ports:
      - 5000:5000
    depends_on:
      - db
      - back
    networks:
      - gis_network

  db:
    container_name: "postgresqlpostgis"
    image: "postgis/postgis"
    restart: always
    expose:
      - "5433"
    ports:
      - '5433:5433'
    command: -p 5433
    volumes:
       - db_persdata:/var/lib/postgrespers
    environment:
      - POSTGRES_ENGINE=django.db.backends.postgresql
      - POSTGRES_DATABASE=hello_django_dev
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5433
    networks:
      - gis_network

networks:
  gis_network:
    driver: bridge

volumes:
  db_persdata : {}
  static:


